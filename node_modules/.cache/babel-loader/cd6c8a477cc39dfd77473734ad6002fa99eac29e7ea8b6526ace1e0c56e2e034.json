{"ast":null,"code":"var _jsxFileName = \"/Users/molly/countdown-timer/src/Components/CountdownTimer/CountdownTimer.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport './CountdownTimer.css';\nimport { getRemainingTimeUntilMsTimestamp } from './Utlis/CountdownTimerUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultRemainingTime = {\n  seconds: '00',\n  minutes: '00',\n  hours: '00',\n  days: '00'\n};\nconst CountdownTimer = _ref => {\n  _s();\n  let {\n    countdownTimestampMs\n  } = _ref;\n  const [remainingTime, setRemainingTime] = useState(defaultRemainingTime);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      updateRemainingTime(countdownTimestampMs);\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, [countdownTimestampMs]);\n  function updateRemainingTime(countdown) {\n    setRemainingTime(getRemainingTimeUntilMsTimestamp(countdown));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"countdown-timer\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: remainingTime.days\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"days\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"two-numbers\",\n        children: remainingTime.hours\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"hours\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"two-numbers\",\n        children: remainingTime.minutes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"minutes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"two-numbers\",\n        children: remainingTime.seconds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"seconds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(CountdownTimer, \"2iit0KZAxs3RAU3zsA1alDlabB0=\");\n_c = CountdownTimer;\nexport default CountdownTimer;\nvar _c;\n$RefreshReg$(_c, \"CountdownTimer\");","map":{"version":3,"names":["useState","useEffect","getRemainingTimeUntilMsTimestamp","jsxDEV","_jsxDEV","Fragment","_Fragment","defaultRemainingTime","seconds","minutes","hours","days","CountdownTimer","_ref","_s","countdownTimestampMs","remainingTime","setRemainingTime","intervalId","setInterval","updateRemainingTime","clearInterval","countdown","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/molly/countdown-timer/src/Components/CountdownTimer/CountdownTimer.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport './CountdownTimer.css';\nimport { getRemainingTimeUntilMsTimestamp } from './Utlis/CountdownTimerUtils';\n\nconst defaultRemainingTime = {\n    seconds: '00',\n    minutes: '00',\n    hours: '00',\n    days: '00'\n}\n\nconst CountdownTimer = ({ countdownTimestampMs }) => {\n    const [remainingTime, setRemainingTime] = useState(defaultRemainingTime);\n\n    useEffect(() => {\n        const intervalId = setInterval(() => {\n            updateRemainingTime(countdownTimestampMs);\n        }, 1000)\n        return () => clearInterval(intervalId)\n    }, [countdownTimestampMs])\n\n    function updateRemainingTime(countdown) {\n        setRemainingTime(getRemainingTimeUntilMsTimestamp(countdown));\n    }\n\n    return (\n        <>\n            <div className=\"countdown-timer\">\n                <span>{remainingTime.days}</span>\n                <span>days</span>\n                <span className=\"two-numbers\">{remainingTime.hours}</span>\n                <span>hours</span>\n                <span className=\"two-numbers\">{remainingTime.minutes}</span>\n                <span>minutes</span>\n                <span className=\"two-numbers\">{remainingTime.seconds}</span>\n                <span>seconds</span>\n            </div>\n        </>\n    );\n}\n\nexport default CountdownTimer;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,sBAAsB;AAC7B,SAASC,gCAAgC,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/E,MAAMC,oBAAoB,GAAG;EACzBC,OAAO,EAAE,IAAI;EACbC,OAAO,EAAE,IAAI;EACbC,KAAK,EAAE,IAAI;EACXC,IAAI,EAAE;AACV,CAAC;AAED,MAAMC,cAAc,GAAGC,IAAA,IAA8B;EAAAC,EAAA;EAAA,IAA7B;IAAEC;EAAqB,CAAC,GAAAF,IAAA;EAC5C,MAAM,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAACO,oBAAoB,CAAC;EAExEN,SAAS,CAAC,MAAM;IACZ,MAAMiB,UAAU,GAAGC,WAAW,CAAC,MAAM;MACjCC,mBAAmB,CAACL,oBAAoB,CAAC;IAC7C,CAAC,EAAE,IAAI,CAAC;IACR,OAAO,MAAMM,aAAa,CAACH,UAAU,CAAC;EAC1C,CAAC,EAAE,CAACH,oBAAoB,CAAC,CAAC;EAE1B,SAASK,mBAAmBA,CAACE,SAAS,EAAE;IACpCL,gBAAgB,CAACf,gCAAgC,CAACoB,SAAS,CAAC,CAAC;EACjE;EAEA,oBACIlB,OAAA,CAAAE,SAAA;IAAAiB,QAAA,eACInB,OAAA;MAAKoB,SAAS,EAAC,iBAAiB;MAAAD,QAAA,gBAC5BnB,OAAA;QAAAmB,QAAA,EAAOP,aAAa,CAACL;MAAI;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACjCxB,OAAA;QAAAmB,QAAA,EAAM;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,eACjBxB,OAAA;QAAMoB,SAAS,EAAC,aAAa;QAAAD,QAAA,EAAEP,aAAa,CAACN;MAAK;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eAC1DxB,OAAA;QAAAmB,QAAA,EAAM;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,eAClBxB,OAAA;QAAMoB,SAAS,EAAC,aAAa;QAAAD,QAAA,EAAEP,aAAa,CAACP;MAAO;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eAC5DxB,OAAA;QAAAmB,QAAA,EAAM;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,eACpBxB,OAAA;QAAMoB,SAAS,EAAC,aAAa;QAAAD,QAAA,EAAEP,aAAa,CAACR;MAAO;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eAC5DxB,OAAA;QAAAmB,QAAA,EAAM;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAClB,iBACP;AAEX,CAAC;AAAAd,EAAA,CA5BKF,cAAc;AAAAiB,EAAA,GAAdjB,cAAc;AA8BpB,eAAeA,cAAc;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}